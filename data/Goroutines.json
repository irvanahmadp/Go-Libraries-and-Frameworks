{
	"name": "Goroutines",
	"index_last_check": 0,
	"last_update": 1703080836,
	"libraries": [
		{
			"id": 134018330,
			"name": "ants",
			"description": "üêúüêúüêú ants is a high-performance and low-cost goroutine pool in Go./ ants ÊòØ‰∏Ä‰∏™È´òÊÄßËÉΩ‰∏î‰ΩéÊçüËÄóÁöÑ goroutine Ê±†„ÄÇ",
			"html_url": "https://github.com/panjf2000/ants",
			"homepage": "https://ants.andypan.me",
			"created_at": "2018-05-19T01:13:38Z",
			"updated_at": "2023-12-20T09:11:14Z",
			"svn_url": "https://github.com/panjf2000/ants",
			"stargazers_count": 11465,
			"watchers_count": 11465,
			"forks_count": 1284,
			"open_issues_count": 21
		},
		{
			"id": 18372716,
			"name": "tunny",
			"description": "A goroutine pool for Go",
			"html_url": "https://github.com/Jeffail/tunny",
			"homepage": "",
			"created_at": "2014-04-02T16:14:58Z",
			"updated_at": "2023-12-20T11:19:13Z",
			"svn_url": "https://github.com/Jeffail/tunny",
			"stargazers_count": 3730,
			"watchers_count": 3730,
			"forks_count": 335,
			"open_issues_count": 9
		},
		{
			"id": 11587044,
			"name": "goworker",
			"description": "goworker is a Go-based background worker that runs 10 to 100,000* times faster than Ruby-based workers.",
			"html_url": "https://github.com/benmanns/goworker",
			"homepage": "https://www.goworker.org",
			"created_at": "2013-07-22T17:04:27Z",
			"updated_at": "2023-12-20T03:06:48Z",
			"svn_url": "https://github.com/benmanns/goworker",
			"stargazers_count": 2760,
			"watchers_count": 2760,
			"forks_count": 291,
			"open_issues_count": 34
		},
		{
			"id": 59030162,
			"name": "workerpool",
			"description": "Concurrency limiting goroutine pool",
			"html_url": "https://github.com/gammazero/workerpool",
			"homepage": "",
			"created_at": "2016-05-17T14:32:06Z",
			"updated_at": "2023-12-19T02:40:56Z",
			"svn_url": "https://github.com/gammazero/workerpool",
			"stargazers_count": 1197,
			"watchers_count": 1197,
			"forks_count": 132,
			"open_issues_count": 16
		},
		{
			"id": 248998145,
			"name": "pond",
			"description": "üîò Minimalistic and High-performance goroutine worker pool written in Go",
			"html_url": "https://github.com/alitto/pond",
			"homepage": "",
			"created_at": "2020-03-21T14:56:33Z",
			"updated_at": "2023-12-20T11:07:02Z",
			"svn_url": "https://github.com/alitto/pond",
			"stargazers_count": 1061,
			"watchers_count": 1061,
			"forks_count": 52,
			"open_issues_count": 4
		},
		{
			"id": 39476279,
			"name": "grpool",
			"description": "Lightweight Goroutine pool",
			"html_url": "https://github.com/ivpusic/grpool",
			"homepage": "https://godoc.org/github.com/ivpusic/grpool",
			"created_at": "2015-07-22T00:15:04Z",
			"updated_at": "2023-12-20T03:11:23Z",
			"svn_url": "https://github.com/ivpusic/grpool",
			"stargazers_count": 735,
			"watchers_count": 735,
			"forks_count": 101,
			"open_issues_count": 5
		},
		{
			"id": 45126702,
			"name": "pool",
			"description": ":speedboat: a limited consumer goroutine or unlimited goroutine pool for easier goroutine handling and cancellation",
			"html_url": "https://github.com/go-playground/pool",
			"homepage": "",
			"created_at": "2015-10-28T16:36:08Z",
			"updated_at": "2023-12-20T03:12:19Z",
			"svn_url": "https://github.com/go-playground/pool",
			"stargazers_count": 720,
			"watchers_count": 720,
			"forks_count": 67,
			"open_issues_count": 4
		},
		{
			"id": 208432326,
			"name": "gowp",
			"description": "golang worker pool , Concurrency limiting goroutine pool",
			"html_url": "https://github.com/xxjwxc/gowp",
			"homepage": "https://xxjwxc.github.io/post/gowp/",
			"created_at": "2019-09-14T11:43:50Z",
			"updated_at": "2023-12-14T09:41:21Z",
			"svn_url": "https://github.com/xxjwxc/gowp",
			"stargazers_count": 486,
			"watchers_count": 486,
			"forks_count": 71,
			"open_issues_count": 2
		},
		{
			"id": 96083021,
			"name": "go-floc",
			"description": "Floc: Orchestrate goroutines with ease.",
			"html_url": "https://github.com/workanator/go-floc",
			"homepage": "",
			"created_at": "2017-07-03T07:34:06Z",
			"updated_at": "2023-09-19T02:47:38Z",
			"svn_url": "https://github.com/workanator/go-floc",
			"stargazers_count": 263,
			"watchers_count": 263,
			"forks_count": 18,
			"open_issues_count": 1
		},
		{
			"id": 69170316,
			"name": "go-flow",
			"description": "Simply way to control goroutines execution order based on dependencies",
			"html_url": "https://github.com/kamildrazkiewicz/go-flow",
			"homepage": "",
			"created_at": "2016-09-25T14:46:09Z",
			"updated_at": "2023-11-28T04:02:03Z",
			"svn_url": "https://github.com/kamildrazkiewicz/go-flow",
			"stargazers_count": 218,
			"watchers_count": 218,
			"forks_count": 27,
			"open_issues_count": 1
		},
		{
			"id": 155613071,
			"name": "artifex",
			"description": "Simple in-memory job queue for Golang using worker-based dispatching",
			"html_url": "https://github.com/mborders/artifex",
			"homepage": "",
			"created_at": "2018-10-31T19:34:31Z",
			"updated_at": "2023-11-17T11:14:19Z",
			"svn_url": "https://github.com/mborders/artifex",
			"stargazers_count": 178,
			"watchers_count": 178,
			"forks_count": 12,
			"open_issues_count": 1
		},
		{
			"id": 111691308,
			"name": "semaphore",
			"description": "Fast resizable golang semaphore primitive",
			"html_url": "https://github.com/marusama/semaphore",
			"homepage": "",
			"created_at": "2017-11-22T14:00:58Z",
			"updated_at": "2023-12-13T08:57:16Z",
			"svn_url": "https://github.com/marusama/semaphore",
			"stargazers_count": 165,
			"watchers_count": 165,
			"forks_count": 11,
			"open_issues_count": 0
		},
		{
			"id": 301775263,
			"name": "go-workers",
			"description": "üë∑ Library for safely running groups of workers concurrently or consecutively that require input and output through channels",
			"html_url": "https://github.com/catmullet/go-workers",
			"homepage": "https://github.com/catmullet/go-workers/wiki/Getting-Started",
			"created_at": "2020-10-06T15:39:43Z",
			"updated_at": "2023-12-01T03:24:34Z",
			"svn_url": "https://github.com/catmullet/go-workers",
			"stargazers_count": 161,
			"watchers_count": 161,
			"forks_count": 16,
			"open_issues_count": 3
		},
		{
			"id": 230590571,
			"name": "async",
			"description": "Synchronization and asynchronous computation package for Go",
			"html_url": "https://github.com/reugn/async",
			"homepage": "https://pkg.go.dev/github.com/reugn/async",
			"created_at": "2019-12-28T09:48:40Z",
			"updated_at": "2023-12-16T22:28:23Z",
			"svn_url": "https://github.com/reugn/async",
			"stargazers_count": 160,
			"watchers_count": 160,
			"forks_count": 8,
			"open_issues_count": 0
		},
		{
			"id": 275085993,
			"name": "errgroup",
			"description": "errgroup with goroutine worker limits",
			"html_url": "https://github.com/neilotoole/errgroup",
			"homepage": "",
			"created_at": "2020-06-26T06:07:39Z",
			"updated_at": "2023-12-15T03:23:30Z",
			"svn_url": "https://github.com/neilotoole/errgroup",
			"stargazers_count": 156,
			"watchers_count": 156,
			"forks_count": 11,
			"open_issues_count": 6
		},
		{
			"id": 117086481,
			"name": "cyclicbarrier",
			"description": "CyclicBarrier golang implementation",
			"html_url": "https://github.com/marusama/cyclicbarrier",
			"homepage": "",
			"created_at": "2018-01-11T10:38:46Z",
			"updated_at": "2023-12-18T13:37:36Z",
			"svn_url": "https://github.com/marusama/cyclicbarrier",
			"stargazers_count": 134,
			"watchers_count": 134,
			"forks_count": 15,
			"open_issues_count": 0
		},
		{
			"id": 95908667,
			"name": "async",
			"description": "A safe way to execute functions asynchronously, recovering them in case of panic. It also provides an error stack aiming to facilitate fail causes discovery.",
			"html_url": "https://github.com/StudioSol/async",
			"homepage": "",
			"created_at": "2017-06-30T17:08:33Z",
			"updated_at": "2023-12-07T14:59:59Z",
			"svn_url": "https://github.com/StudioSol/async",
			"stargazers_count": 129,
			"watchers_count": 129,
			"forks_count": 17,
			"open_issues_count": 2
		},
		{
			"id": 186094005,
			"name": "gollback",
			"description": "Go asynchronous simple function utilities, for managing execution of closures and callbacks",
			"html_url": "https://github.com/vardius/gollback",
			"homepage": "",
			"created_at": "2019-05-11T05:56:37Z",
			"updated_at": "2023-12-15T03:35:15Z",
			"svn_url": "https://github.com/vardius/gollback",
			"stargazers_count": 114,
			"watchers_count": 114,
			"forks_count": 12,
			"open_issues_count": 0
		},
		{
			"id": 170883193,
			"name": "breaker",
			"description": "üöß Flexible mechanism to make execution flow interruptible.",
			"html_url": "https://github.com/kamilsk/breaker",
			"homepage": "https://pkg.go.dev/github.com/kamilsk/breaker",
			"created_at": "2019-02-15T15:08:24Z",
			"updated_at": "2021-06-27T05:54:10Z",
			"svn_url": "https://github.com/kamilsk/breaker",
			"stargazers_count": 97,
			"watchers_count": 97,
			"forks_count": 5,
			"open_issues_count": 7
		},
		{
			"id": 190398773,
			"name": "Hunch",
			"description": "Hunch provides functions like: All, First, Retry, Waterfall etc., that makes asynchronous flow control more intuitive.",
			"html_url": "https://github.com/AaronJan/Hunch",
			"homepage": "",
			"created_at": "2019-06-05T13:21:04Z",
			"updated_at": "2023-12-15T03:38:44Z",
			"svn_url": "https://github.com/AaronJan/Hunch",
			"stargazers_count": 97,
			"watchers_count": 97,
			"forks_count": 9,
			"open_issues_count": 1
		},
		{
			"id": 102645557,
			"name": "threadpool",
			"description": "Golang simple thread pool implementation",
			"html_url": "https://github.com/shettyh/threadpool",
			"homepage": "",
			"created_at": "2017-09-06T18:45:39Z",
			"updated_at": "2023-11-28T14:10:57Z",
			"svn_url": "https://github.com/shettyh/threadpool",
			"stargazers_count": 96,
			"watchers_count": 96,
			"forks_count": 20,
			"open_issues_count": 2
		},
		{
			"id": 70327650,
			"name": "semaphore",
			"description": "üö¶ Semaphore pattern implementation with timeout of lock/unlock operations.",
			"html_url": "https://github.com/kamilsk/semaphore",
			"homepage": "",
			"created_at": "2016-10-08T11:48:12Z",
			"updated_at": "2023-09-22T04:25:26Z",
			"svn_url": "https://github.com/kamilsk/semaphore",
			"stargazers_count": 95,
			"watchers_count": 95,
			"forks_count": 12,
			"open_issues_count": 6
		},
		{
			"id": 105750519,
			"name": "worker-pool",
			"description": "Go simple async worker pool",
			"html_url": "https://github.com/vardius/worker-pool",
			"homepage": "",
			"created_at": "2017-10-04T09:18:31Z",
			"updated_at": "2023-12-18T08:06:12Z",
			"svn_url": "https://github.com/vardius/worker-pool",
			"stargazers_count": 88,
			"watchers_count": 88,
			"forks_count": 13,
			"open_issues_count": 0
		},
		{
			"id": 160132282,
			"name": "gpool",
			"description": "gpool - a generic context-aware resizable goroutines pool to bound concurrency based on semaphore. ",
			"html_url": "https://github.com/sherifabdlnaby/gpool",
			"homepage": "",
			"created_at": "2018-12-03T04:23:35Z",
			"updated_at": "2023-12-06T02:59:13Z",
			"svn_url": "https://github.com/sherifabdlnaby/gpool",
			"stargazers_count": 88,
			"watchers_count": 88,
			"forks_count": 4,
			"open_issues_count": 0
		},
		{
			"id": 202644046,
			"name": "goccm",
			"description": "Limits the number of goroutines that are allowed to run concurrently",
			"html_url": "https://github.com/zenthangplus/goccm",
			"homepage": "",
			"created_at": "2019-08-16T02:26:53Z",
			"updated_at": "2023-08-01T10:49:14Z",
			"svn_url": "https://github.com/zenthangplus/goccm",
			"stargazers_count": 66,
			"watchers_count": 66,
			"forks_count": 14,
			"open_issues_count": 3
		},
		{
			"id": 223641632,
			"name": "nursery",
			"description": "Structured Concurrency in Go",
			"html_url": "https://github.com/arunsworld/nursery",
			"homepage": "",
			"created_at": "2019-11-23T19:26:02Z",
			"updated_at": "2023-09-21T14:01:47Z",
			"svn_url": "https://github.com/arunsworld/nursery",
			"stargazers_count": 62,
			"watchers_count": 62,
			"forks_count": 6,
			"open_issues_count": 1
		},
		{
			"id": 173740467,
			"name": "routine",
			"description": "go routine control, abstraction of the Main and some useful Executors.Â¶ÇÊûú‰Ω†‰∏ç‰ºöÁÆ°ÁêÜGoroutineÁöÑËØùÔºåÁî®ÂÆÉ",
			"html_url": "https://github.com/x-mod/routine",
			"homepage": "",
			"created_at": "2019-03-04T12:25:23Z",
			"updated_at": "2023-11-18T03:57:22Z",
			"svn_url": "https://github.com/x-mod/routine",
			"stargazers_count": 61,
			"watchers_count": 61,
			"forks_count": 7,
			"open_issues_count": 0
		},
		{
			"id": 357311822,
			"name": "gowl",
			"description": "Gowl is a process management and process monitoring tool at once. An infinite worker pool gives you the ability to control the pool and processes and monitor their status.",
			"html_url": "https://github.com/hmdsefi/gowl",
			"homepage": "",
			"created_at": "2021-04-12T19:15:53Z",
			"updated_at": "2023-08-02T15:56:03Z",
			"svn_url": "https://github.com/hmdsefi/gowl",
			"stargazers_count": 59,
			"watchers_count": 59,
			"forks_count": 8,
			"open_issues_count": 5
		},
		{
			"id": 189577717,
			"name": "gohive",
			"description": "üêù A Highly Performant and easy to use goroutine pool for Go",
			"html_url": "https://github.com/loveleshsharma/gohive",
			"homepage": "",
			"created_at": "2019-05-31T10:44:24Z",
			"updated_at": "2023-12-20T02:12:10Z",
			"svn_url": "https://github.com/loveleshsharma/gohive",
			"stargazers_count": 47,
			"watchers_count": 47,
			"forks_count": 6,
			"open_issues_count": 2
		},
		{
			"id": 232180875,
			"name": "kyoo",
			"description": "Unlimited job queue for go, using a pool of concurrent workers processing the job queue entries",
			"html_url": "https://github.com/dirkaholic/kyoo",
			"homepage": "",
			"created_at": "2020-01-06T20:35:11Z",
			"updated_at": "2023-12-13T06:20:06Z",
			"svn_url": "https://github.com/dirkaholic/kyoo",
			"stargazers_count": 45,
			"watchers_count": 45,
			"forks_count": 4,
			"open_issues_count": 0
		},
		{
			"id": 144038488,
			"name": "go-waitgroup",
			"description": "A sync.WaitGroup with error handling and concurrency control",
			"html_url": "https://github.com/pieterclaerhout/go-waitgroup",
			"homepage": "https://www.yellowduck.be",
			"created_at": "2018-08-08T16:12:35Z",
			"updated_at": "2023-12-15T03:46:27Z",
			"svn_url": "https://github.com/pieterclaerhout/go-waitgroup",
			"stargazers_count": 44,
			"watchers_count": 44,
			"forks_count": 4,
			"open_issues_count": 1
		},
		{
			"id": 156875481,
			"name": "oversight",
			"description": "Erlang-like supervisor trees",
			"html_url": "https://github.com/cirello-io/oversight",
			"homepage": "https://cirello.io/oversight",
			"created_at": "2018-11-09T14:46:48Z",
			"updated_at": "2023-08-20T12:45:27Z",
			"svn_url": "https://github.com/cirello-io/oversight",
			"stargazers_count": 35,
			"watchers_count": 35,
			"forks_count": 5,
			"open_issues_count": 0
		},
		{
			"id": 94678405,
			"name": "parallel-fn",
			"description": "Run functions in parallel :comet:",
			"html_url": "https://github.com/rafaeljesus/parallel-fn",
			"homepage": "",
			"created_at": "2017-06-18T09:47:54Z",
			"updated_at": "2023-03-19T07:23:27Z",
			"svn_url": "https://github.com/rafaeljesus/parallel-fn",
			"stargazers_count": 35,
			"watchers_count": 35,
			"forks_count": 2,
			"open_issues_count": 0
		},
		{
			"id": 131107469,
			"name": "go-trylock",
			"description": "TryLock support on read-write lock for Golang",
			"html_url": "https://github.com/subchen/go-trylock",
			"homepage": "",
			"created_at": "2018-04-26T06:02:47Z",
			"updated_at": "2023-02-11T00:46:09Z",
			"svn_url": "https://github.com/subchen/go-trylock",
			"stargazers_count": 33,
			"watchers_count": 33,
			"forks_count": 9,
			"open_issues_count": 1
		},
		{
			"id": 137878564,
			"name": "stl",
			"description": "Software Transactional Locks",
			"html_url": "https://github.com/ssgreg/stl",
			"homepage": "",
			"created_at": "2018-06-19T10:50:11Z",
			"updated_at": "2023-07-18T16:30:19Z",
			"svn_url": "https://github.com/ssgreg/stl",
			"stargazers_count": 27,
			"watchers_count": 27,
			"forks_count": 5,
			"open_issues_count": 0
		},
		{
			"id": 301413443,
			"name": "channelify",
			"description": "Make functions return a channel for parallel processing via go routines.",
			"html_url": "https://github.com/ddelizia/channelify",
			"homepage": "",
			"created_at": "2020-10-05T13:12:48Z",
			"updated_at": "2023-02-04T17:11:21Z",
			"svn_url": "https://github.com/ddelizia/channelify",
			"stargazers_count": 27,
			"watchers_count": 27,
			"forks_count": 3,
			"open_issues_count": 1
		},
		{
			"id": 314944787,
			"name": "concurrency-limiter",
			"description": "Make functions return a channel for parallel processing via go routines.",
			"html_url": "https://github.com/vivek-ng/concurrency-limiter",
			"homepage": "",
			"created_at": "2020-11-22T02:35:52Z",
			"updated_at": "2023-10-23T12:50:10Z",
			"svn_url": "https://github.com/vivek-ng/concurrency-limiter",
			"stargazers_count": 17,
			"watchers_count": 17,
			"forks_count": 4,
			"open_issues_count": 0
		},
		{
			"id": 384920855,
			"name": "breaker",
			"description": "üöß Flexible mechanism to make execution flow interruptible.",
			"html_url": "https://github.com/kamilsk/breaker",
			"homepage": "https://pkg.go.dev/github.com/kamilsk/breaker",
			"created_at": "2021-07-11T10:35:18Z",
			"updated_at": "2023-08-21T09:36:07Z",
			"svn_url": "https://github.com/kamilsk/breaker",
			"stargazers_count": 16,
			"watchers_count": 16,
			"forks_count": 1,
			"open_issues_count": 0
		},
		{
			"id": 162679890,
			"name": "queue",
			"description": "package queue gives you a queue group accessibility. Helps you to limit goroutines, wait for the end of the all goroutines and much more.",
			"html_url": "https://github.com/AnikHasibul/queue",
			"homepage": "",
			"created_at": "2018-12-21T07:15:00Z",
			"updated_at": "2023-10-24T04:24:03Z",
			"svn_url": "https://github.com/AnikHasibul/queue",
			"stargazers_count": 15,
			"watchers_count": 15,
			"forks_count": 2,
			"open_issues_count": 0
		},
		{
			"id": 229894916,
			"name": "conexec",
			"description": "A concurrent toolkit to help execute funcs concurrently in an efficient and safe way. It supports specifying the overall timeout to avoid blocking.",
			"html_url": "https://github.com/ITcathyh/conexec",
			"homepage": "",
			"created_at": "2019-12-24T07:35:11Z",
			"updated_at": "2023-11-28T09:20:03Z",
			"svn_url": "https://github.com/ITcathyh/conexec",
			"stargazers_count": 14,
			"watchers_count": 14,
			"forks_count": 2,
			"open_issues_count": 0
		},
		{
			"id": 157481066,
			"name": "go-tools",
			"description": "A collection of tools for Golang",
			"html_url": "https://github.com/nikhilsaraf/go-tools",
			"homepage": "",
			"created_at": "2018-11-14T02:53:08Z",
			"updated_at": "2023-11-15T22:41:27Z",
			"svn_url": "https://github.com/nikhilsaraf/go-tools",
			"stargazers_count": 13,
			"watchers_count": 13,
			"forks_count": 3,
			"open_issues_count": 0
		},
		{
			"id": 252974027,
			"name": "hands",
			"description": "Hands is a process controller used to control the execution and return strategies of multiple goroutines.",
			"html_url": "https://github.com/duanckham/hands",
			"homepage": "",
			"created_at": "2020-04-04T11:04:11Z",
			"updated_at": "2022-10-10T08:07:01Z",
			"svn_url": "https://github.com/duanckham/hands",
			"stargazers_count": 10,
			"watchers_count": 10,
			"forks_count": 3,
			"open_issues_count": 1
		}
	]
}